import os
import sys
import pytest
from unittest import mock
from fastapi.testclient import TestClient

# Add the app directory to the Python path
sys.path.insert(0, os.path.join(os.path.dirname(os.path.dirname(os.path.abspath(__file__))), 'app'))

# Mock the database dependency before importing the app
mock_db_session = mock.MagicMock()

# Create a test client using patched dependencies
from main import app
from database import get_db

# Override the database dependency to use our mock
@pytest.fixture(autouse=True)
def mock_get_db():
    """Override the get_db dependency to use a mock database session."""
    # Setup the mock to return a consistent value
    with mock.patch('database.get_db', return_value=mock_db_session):
        yield mock_db_session

# Create a test client
client = TestClient(app)

@pytest.fixture
def test_client():
    """Return a TestClient instance for testing FastAPI routes."""
    return client
