name: Test Bite Map

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgis/postgis:14-3.2
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: bitemap_test
        ports:
          - 5432:5432
        # Health check to ensure postgres is ready before tests
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install pytest pytest-cov pytest-mock httpx python-slugify
        
    - name: Run tests
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/bitemap_test
        SECRET_KEY: test_secret_for_ci
        MAPBOX_TOKEN: test_mapbox_token
        GOOGLE_KEY: test_google_key
        DEBUG: "1"
      run: |
        pytest -v --cov=. --cov-report=xml tests/

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml

  test-sqlite:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install pytest pytest-cov pytest-mock httpx python-slugify
        
    - name: Run tests with SQLite
      env:
        DATABASE_URL: sqlite:///:memory:
        SECRET_KEY: test_secret_for_ci
        MAPBOX_TOKEN: test_mapbox_token
        GOOGLE_KEY: test_google_key
        DEBUG: "1"
      run: |
        python run_tests.py --coverage tests/
